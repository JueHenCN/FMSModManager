@using FMSModManager.Core.Services
<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">主页</MudNavLink>
    
    <MudNavGroup Title="本地Mod管理" Icon="@Icons.Material.Filled.Storage">
        <MudNavGroup Title="宗教Mod" Icon="@Icons.Material.Filled.TempleBuddhist">
            @foreach (var mod in _religionMods)
            {
                <MudNavLink Href="@($"local-mods/religion/{mod}")" Icon="@Icons.Material.Filled.Article">
                    @mod
                </MudNavLink>
            }
        </MudNavGroup>
        <MudNavLink Href="local-mods/culture" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Diversity3">文化Mod管理</MudNavLink>
    </MudNavGroup>
    
    <MudNavGroup Title="创意工坊Mod管理" Icon="@Icons.Material.Filled.ShoppingCart">
        <MudNavLink Href="workshop-mods/religion" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.TempleBuddhist">宗教Mod管理</MudNavLink>
        <MudNavLink Href="workshop-mods/culture" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Diversity3">文化Mod管理</MudNavLink>
    </MudNavGroup>
</MudNavMenu>

@code {
    private List<string> _religionMods = new();
    
    [Inject]
    private ReligionService ReligionService { get; set; }
    [Inject]
    private EventBusService EventBus { get; set; }
    
    private void RefreshMods()
    {
        _religionMods = ReligionService.GetAvailableReligionMods();
        StateHasChanged();
    }
    
    protected override void OnInitialized()
    {
        RefreshMods();
        EventBus.ModsChanged += RefreshMods;
    }
    
    public void Dispose()
    {
        EventBus.ModsChanged -= RefreshMods;
    }
}
