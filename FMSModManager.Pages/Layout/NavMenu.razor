@using FMSModManager.Core.Services
@using FMSModManager.Core.Services.Interface
@using FMSModManager.Core.Events
@using FMSModManager.Pages.Components
@inject LanguageService Lang
@inject ICultureModService CultureModService

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">@Lang.GetText("Home", "NavMenu")</MudNavLink>
    
    <MudNavGroup Title="@Lang.GetText("LocalMods", "NavMenu")" Icon="@Icons.Material.Filled.Storage">
        <MudNavGroup Title="@Lang.GetText("ReligionMods", "NavMenu")" Icon="@Icons.Material.Filled.TempleBuddhist">
            @foreach (var mod in _religionMods)
            {
                <MudNavLink Href="@($"local-mods/religion/{mod}")" Icon="@Icons.Material.Filled.Article">
                    @mod
                </MudNavLink>
            }
        </MudNavGroup>

        <MudNavGroup Title="@Lang.GetText("CultureMods", "NavMenu")" Icon="@Icons.Material.Filled.Diversity3">
            @foreach (var mod in _cultureMods)
            {
                <MudNavLink Href="@($"local-mods/culture/{mod}")" Icon="@Icons.Material.Filled.Article">
                    @mod
                </MudNavLink>
            }
        </MudNavGroup>
    </MudNavGroup>
    
    <MudNavGroup Title="@Lang.GetText("WorkshopMods", "NavMenu")" Icon="@Icons.Material.Filled.ShoppingCart">

        <MudNavGroup Title="@Lang.GetText("SubscriptionMods", "NavMenu")" Icon="@Icons.Material.Filled.Download">
            @foreach (var mod in _subscriptionMods)
            {
                <MudNavLink Href="@($"workshop-mods/subscription/{mod}")" Icon="@Icons.Material.Filled.Article">
                    @mod
                </MudNavLink>
            }
        </MudNavGroup>

        <MudNavGroup Title="@Lang.GetText("PublishMods", "NavMenu")" Icon="@Icons.Material.Filled.Upload">
            @foreach (var mod in _publishMods)
            {
            <MudNavLink Href="@($"workshop-mods/publish/{mod}")" Icon="@Icons.Material.Filled.Article">
                @mod
                </MudNavLink>
            }
        </MudNavGroup>
    </MudNavGroup>
</MudNavMenu>

@code {
    private List<string> _cultureMods = new();
    private List<string> _religionMods = new();
    private List<string> _subscriptionMods = new();
    private List<string> _publishMods = new();
    
    [Inject]
    private ReligionService ReligionService { get; set; }
    [Inject]
    private SteamworkService SteamworkService { get; set; }
    [Inject]
    private IEventAggregator EventAggregator { get; set; }
    

    private void RefreshMods()
    {
        _cultureMods = CultureModService.GetAvailableCultureMods();
        _religionMods = ReligionService.GetAvailableReligionMods();
        _subscriptionMods = SteamworkService.GetAvailableSubscriptionMods();
        _publishMods = SteamworkService.GetAvailablePublishMods();
        StateHasChanged();
    }
    
    protected async override void OnInitialized()
    {
        await SteamworkService.RefauseWorkShopModList();
        EventAggregator.GetEvent<ModsChangedEvent>().Subscribe(RefreshMods);
        EventAggregator.GetEvent<SteamworkServiceRefuseEvent>().Subscribe(RefreshMods);
        EventAggregator.GetEvent<LanguageChangedEvent>().Subscribe(LanguageChangedFunc);
        RefreshMods();
    }

    private void LanguageChangedFunc(string language)
    {
        StateHasChanged();
    }
    
    public void Dispose()
    {
        EventAggregator.GetEvent<ModsChangedEvent>().Unsubscribe(RefreshMods);
        EventAggregator.GetEvent<SteamworkServiceRefuseEvent>().Unsubscribe(RefreshMods);
    }

}
