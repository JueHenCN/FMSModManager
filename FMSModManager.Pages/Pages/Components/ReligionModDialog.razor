@using FMSModManager.Core.Services
@namespace FMSModManager.Pages.Components
@inject LocalizationService LocalizationService
@inject ReligionService ReligionService

<MudDialog>
    <DialogContent>
        <MudContainer Style="max-height: 70vh; overflow-y: scroll">
            <MudTextField @bind-Value="ModName" Label="Mod 名称" Disabled="@(!IsNew)" />
            
            <MudExpansionPanels>
                @foreach (var religion in Religions)
                {
                    <MudExpansionPanel>
                        <TitleContent>
                            <MudText>
                                <MudIcon Icon="@Icons.Material.Filled.TempleBuddhist" Class="mr-2"/>
                                @GetLocalizedText(religion.Name, "Chinese")
                            </MudText>
                            <MudText Typo="Typo.body2" Class="ml-8">
                                @GetLocalizedText(religion.Description, "Chinese")
                            </MudText>
                        </TitleContent>
                        <ChildContent>
                            <MudTabs>
                                <MudTabPanel Text="基本信息">
                                    <MudTextField @bind-Value="religion.Name" Label="宗教名称键" Class="mt-3"/>
                                    <MudTextField @bind-Value="religion.Description" Label="描述键" Class="mt-3"/>
                                    <MudTextField @bind-Value="religion.HolyBookName" Label="圣典名称键" Class="mt-3"/>
                                    
                                    <MudText Typo="Typo.subtitle1" Class="mt-4">修行方式键</MudText>
                                    @foreach (var (practice, index) in religion.Practices.Select((p, i) => (p, i)))
                                    {
                                        var i = index;
                                        <MudTextField @bind-Value="religion.Practices[i]" Label="@($"修行方式 {i + 1}")" Class="mt-2"/>
                                    }
                                    <MudButton OnClick="@(() => religion.Practices.Add(""))" 
                                             StartIcon="@Icons.Material.Filled.Add" 
                                             Color="Color.Primary" 
                                             Class="mt-2">
                                        添加修行方式
                                    </MudButton>
                                </MudTabPanel>
                                <MudTabPanel Text="本地化">
                                    <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-3">
                                        @foreach (var lang in _languages)
                                        {
                                            <MudTabPanel Text="@lang">
                                                <MudTextField @bind-Value="_localizations[religion.Name][lang]" 
                                                            Label="宗教名称" Class="mt-3"/>
                                                <MudTextField @bind-Value="_localizations[religion.Description][lang]" 
                                                            Label="描述" Class="mt-3" Lines="3"/>
                                                <MudTextField @bind-Value="_localizations[religion.HolyBookName][lang]" 
                                                            Label="圣典名称" Class="mt-3"/>
                                                
                                                <MudText Typo="Typo.subtitle1" Class="mt-4">修行方式</MudText>
                                                @foreach (var practice in religion.Practices)
                                                {
                                                    <MudTextField @bind-Value="_localizations[practice][lang]" 
                                                                Label="修行方式" Class="mt-2"/>
                                                }
                                            </MudTabPanel>
                                        }
                                    </MudTabs>
                                </MudTabPanel>
                            </MudTabs>
                        </ChildContent>
                    </MudExpansionPanel>
                }
            </MudExpansionPanels>

            <MudButton OnClick="AddNewReligion" 
                      StartIcon="@Icons.Material.Filled.Add" 
                      Color="Color.Primary" 
                      Class="mt-4 mb-2" 
                      FullWidth="true">
                添加新宗教
            </MudButton>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">取消</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">保存</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    
    [Parameter] public bool IsNew { get; set; }
    [Parameter] public string ModName { get; set; }
    [Parameter] public List<Religion> Religions { get; set; } = new();

    private readonly List<string> _languages = new()
    {
        "Chinese",
        "TraditionalChinese",
        "English",
        "Russian",
        "SpanishSpain",
        "PortugueseBrazil",
        "German",
        "Japanese",
        "French",
        "Polish",
        "SpanishLatinAmerica",
        "PortuguesePortugal",
        "Korean",
        "Turkish"
    };

    private Dictionary<string, Dictionary<string, string>> _localizations = new();
    private readonly string _examplePath;

    public ReligionModDialog()
    {
        _examplePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Example");
    }

    protected override void OnInitialized()
    {
        _localizations = new Dictionary<string, Dictionary<string, string>>();

        if (!IsNew)
        {
            try
            {
                _localizations = LocalizationService.ReadLocalization(ModName, "Religion");
               
                // 如果本地化文件中缺少某些语言，为其添加空值
                foreach (var key in _localizations.Keys.ToList())
                {
                    foreach (var lang in _languages)
                    {
                        if (!_localizations[key].ContainsKey(lang))
                        {
                            _localizations[key][lang] = "";
                        }
                    }
                }
            }
            catch
            {
                // 如果读取失败，保持空字典
            }
        }

        // 无论是新建还是编辑，都确保所有键存在
        foreach (var religion in Religions)
        {
            EnsureLocalizationKeyExists(religion.Name);
            EnsureLocalizationKeyExists(religion.Description);
            EnsureLocalizationKeyExists(religion.HolyBookName);
            
            foreach (var practice in religion.Practices)
            {
                EnsureLocalizationKeyExists(practice);
            }
        }
    }

    private void EnsureLocalizationKeyExists(string key)
    {
        if (!_localizations.ContainsKey(key))
        {
            _localizations[key] = _languages.ToDictionary(lang => lang, _ => "");
        }
    }

    private string GetLocalizedText(string key, string language)
    {
        if (string.IsNullOrEmpty(key)) return "";

        if (_localizations.TryGetValue(key, out var translations) && 
            translations.TryGetValue(language, out var text))
        {
            return string.IsNullOrEmpty(text) ? key : text;
        }
        return key;
    }

    private void AddNewReligion()
    {
        var religion = new Religion
        {
            Name = $"NewReligion{Religions.Count + 1}",
            Description = $"NewReligion{Religions.Count + 1}Description",
            HolyBookName = $"NewReligion{Religions.Count + 1}HolyBookName",
            Practices = new List<string> { $"NewReligion{Religions.Count + 1}Practice1" }
        };

        // 为新的键创建本地化条目
        EnsureLocalizationKeyExists(religion.Name);
        EnsureLocalizationKeyExists(religion.Description);
        EnsureLocalizationKeyExists(religion.HolyBookName);
        foreach (var practice in religion.Practices)
        {
            EnsureLocalizationKeyExists(practice);
        }

        Religions.Add(religion);
    }

    private void Submit()
    {
        if (string.IsNullOrEmpty(ModName))
        {
            MudDialog.Cancel();
            return;
        }

        var result = new ReligionFile { Religions = Religions };
        
        // 确保目录存在
        var modPath = Path.Combine(_examplePath, "Religion", ModName);
        if (!Directory.Exists(modPath))
        {
            Directory.CreateDirectory(modPath);
        }

        LocalizationService.WriteLocalization(ModName, "Religion", _localizations);
        MudDialog.Close(DialogResult.Ok(new { ModName, Data = result }));
    }

    private void Cancel() => MudDialog.Cancel();
} 