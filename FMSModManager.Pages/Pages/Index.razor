@page "/"
@using FMSModManager.Core.Services
@using Prism.Events
@using FMSModManager.Core.Events
@using FMSModManager.Pages.Components
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject ReligionService ReligionService
@inject ISnackbar Snackbar
@inject IEventAggregator EventAggregator
@inject LanguageService Lang

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-16">
    <MudGrid>
        <MudItem xs="12" sm="6">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h5">@Lang.GetText("ReligionMod", "Index")</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary" OnClick="CreateNewReligionMod"/>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>@Lang.GetText("ReligionModDescription", "Index")</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton EndIcon="@Icons.Material.Filled.ChevronRight" Color="Color.Primary" 
                              OnClick="@(() => NavigationManager.NavigateTo("/local-mods/religion"))">
                        @Lang.GetText("ViewAllReligionMods", "Index")
                    </MudButton>
                </MudCardActions>

            </MudCard>

        </MudItem>
        
        <MudItem xs="12" sm="6">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h5">@Lang.GetText("CultureMod", "Index")</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>

                        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Primary"/>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>@Lang.GetText("CultureModDescription", "Index")</MudText>
                </MudCardContent>
                <MudCardActions>

                    <MudButton EndIcon="@Icons.Material.Filled.ChevronRight" Color="Color.Primary" 
                              OnClick="@(() => NavigationManager.NavigateTo("/local-mods/culture"))">
                        @Lang.GetText("ViewAllCultureMods", "Index")
                    </MudButton>
                </MudCardActions>   

            </MudCard>

        </MudItem>
    </MudGrid>
</MudContainer>

@code {

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        EventAggregator.GetEvent<LanguageChangedEvent>().Subscribe(LanguageChangedFunc);
    }

    private void LanguageChangedFunc(string language)
    {
        StateHasChanged();
    }

    private async Task CreateNewReligionMod()

    {
        var parameters = new DialogParameters
        {
            { "IsNew", true },
            { "ModName", "" },
            { "Religions", new List<Religion>() }
        };

        var dialog = await DialogService.ShowAsync<ReligionModDialog>(Lang.GetText("CreateNewReligionMod", "Index"), parameters);
        var result = await dialog.Result;


        if (!result.Canceled)
        {
            try
            {
                var data = (dynamic)result.Data;
                ReligionService.WriteReligion(data.ModName, data.Data);
                Snackbar.Add(Lang.GetText("ModCreatedSuccessfully", "Index"), Severity.Success);
                EventAggregator.GetEvent<ModsChangedEvent>().Publish();
                await Task.Delay(100);
                NavigationManager.NavigateTo($"/local-mods/religion/{data.ModName}");

            }
            catch (Exception ex)
            {
                Snackbar.Add(Lang.GetText("CreateFailed", "Index") + ": " + ex.Message, Severity.Error);
            }

        }
    }
} 