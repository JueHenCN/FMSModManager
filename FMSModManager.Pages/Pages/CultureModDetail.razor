@page "/local-mods/culture/{ModName}"
@using FMSModManager.Core.Services
@using FMSModManager.Core.Models
@inject CultureService CultureService
@inject LocalizationService LocalizationService
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject LanguageService Lang

<MudText Typo="Typo.h4" Class="mb-4">Mod名称: @ModName</MudText>

@if (_culture == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudPaper Class="pa-4">
        <MudToolBar Dense="true">
            <MudSpacer />
            <MudButtonGroup Size="Size.Small" Variant="Variant.Outlined">
                <MudButton OnClick="@(() => NavigationManager.NavigateTo($"/local-mods/culture/{ModName}/edit"))"
                           StartIcon="@Icons.Material.Filled.Edit">@Lang.GetText("Edit")</MudButton>
            </MudButtonGroup>
        </MudToolBar>

        <MudTabs>
            <MudTabPanel Text="城市名称">
                <MudTable Items="@_culture.CityNames" Dense="true" Hover="true"
                         Breakpoint="Breakpoint.Sm"
                         @ref="_cityNamesTable"
                         Pagination="true">
                    <HeaderContent>
                        <MudTh>键名</MudTh>
                        <MudTh>中文</MudTh>
                        <MudTh>英文</MudTh>
                    </HeaderContent>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] { 8, 16, 32 }"
                                     RowsPerPageString="每页显示:"
                                     InfoFormat="{first_item}-{last_item} / {all_items}" />
                    </PagerContent>
                    <RowTemplate>
                        <MudTd DataLabel="键名">@context.Key</MudTd>
                        <MudTd DataLabel="中文">@GetTranslation(context, "Chinese")</MudTd>
                        <MudTd DataLabel="英文">@GetTranslation(context, "English")</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudTabPanel>

            <MudTabPanel Text="国家名称">
                <MudTable Items="@_culture.StateNames" Dense="true" Hover="true"
                         Breakpoint="Breakpoint.Sm"
                         @ref="_stateNamesTable"
                         Pagination="true">
                    <HeaderContent>
                        <MudTh>键名</MudTh>
                        <MudTh>中文</MudTh>
                        <MudTh>英文</MudTh>
                    </HeaderContent>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] { 10, 20, 50, 100 }"
                                     RowsPerPageString="每页显示:"
                                     InfoFormat="{first_item}-{last_item} / {all_items}" />
                    </PagerContent>
                    <RowTemplate>
                        <MudTd DataLabel="键名">@context.Key</MudTd>
                        <MudTd DataLabel="中文">@GetTranslation(context, "Chinese")</MudTd>
                        <MudTd DataLabel="英文">@GetTranslation(context, "English")</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudTabPanel>
        </MudTabs>
    </MudPaper>
}

@code {
    [Parameter] public string ModName { get; set; }
    
    private Culture _culture;
    private MudTable<CityName> _cityNamesTable;
    private MudTable<StateName> _stateNamesTable;

    protected override void OnInitialized()
    {
        Lang.LanguageChanged += OnLanguageChanged;
    }

    protected override void OnParametersSet()
    {
        LoadData();
    }

    private void OnLanguageChanged()
    {
        LoadData();
        StateHasChanged();
    }

    public void Dispose()
    {
        Lang.LanguageChanged -= OnLanguageChanged;
    }

    private void LoadData()
    {
        try
        {
            _culture = CultureService.GetCulture(ModName);
            if (_cityNamesTable != null)
            {
                var currentRowsPerPage = _cityNamesTable.RowsPerPage;
                StateHasChanged();
                _cityNamesTable.RowsPerPage = currentRowsPerPage;
            }
            if (_stateNamesTable != null)
            {
                var currentRowsPerPage = _stateNamesTable.RowsPerPage;
                StateHasChanged();
                _stateNamesTable.RowsPerPage = currentRowsPerPage;
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"加载失败: {ex.Message}", Severity.Error);
            NavigationManager.NavigateTo("/");
        }
    }

    private string GetTranslation<T>(T item, string language) where T : class
    {
        var translations = item.GetType().GetProperty("Translations")?.GetValue(item) as Dictionary<string, string>;
        return translations?.GetValueOrDefault(language, "") ?? "";
    }
}
