@page "/local-mods/culture"
@using FMSModManager.Core.Services
@using FMSModManager.Core.Services.Interface
@using FMSModManager.Pages.Pages.Components
@using Prism.Events
@using FMSModManager.Core.Events
@using FMSModManager.Pages.Components
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject IEventAggregator EventAggregator
@inject ICultureModService CultureModService
@inject LanguageService Lang

<MudText Typo="Typo.h3" Class="mb-4">@Lang.GetText("Title", "LocalModsCulture")</MudText>


<MudGrid>
    <MudItem xs="12">
        <MudPaper Class="pa-4">
            <MudToolBar Dense="true">
                <MudText Typo="Typo.h5">@Lang.GetText("InstalledCultureMods", "LocalModsCulture")</MudText>
                <MudSpacer />
                <MudButton Color="Color.Primary" 
                StartIcon="@Icons.Material.Filled.Add"
                OnClick="CreateNewMod">
                    @Lang.GetText("CreateNewMod", "LocalModsCulture")
                </MudButton>
            </MudToolBar>


            @if (_cultures == null)
            {
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            }
            else if (!_cultures.Any())
            {
                <MudAlert Severity="Severity.Info">@Lang.GetText("NoCultureModsFound", "LocalModsCulture")</MudAlert>
            }
            else

            {
                <MudTable Items="@_cultures" Dense="true" Hover="true">
                    <HeaderContent>
                        <MudTh>@Lang.GetText("ModName", "LocalModsCulture")</MudTh>
                        <MudTh>@Lang.GetText("CityCount", "LocalModsCulture")</MudTh>
                        <MudTh>@Lang.GetText("PoliticalSystemCount", "LocalModsCulture")</MudTh>
                        <MudTh>@Lang.GetText("StateNameCount", "LocalModsCulture")</MudTh>
                        <MudTh>@Lang.GetText("Operation")</MudTh>

                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="@Lang.GetText("ModName", "LocalModsCulture")">@context</MudTd>
                        <MudTd DataLabel="@Lang.GetText("CityCount", "LocalModsCulture")">
                            @try

                            {
                                @(CultureModService.GetCultureMod(context)?.CityNames.Count ?? 0)
                            }
                            catch
                            {
                                <MudChip Color="Color.Error" Size="Size.Small">@Lang.GetText("Error")</MudChip>
                            }
                        </MudTd>
                        <MudTd DataLabel="@Lang.GetText("PoliticalSystemCount", "LocalModsCulture")">

                            @try

                            {
                                @(CultureModService.GetCultureMod(context)?.PoliticalSystems.Count ?? 0)
                            }
                            catch
                            {
                                <MudChip Color="Color.Error" Size="Size.Small">@Lang.GetText("Error")</MudChip>
                            }
                        </MudTd>
                        <MudTd DataLabel="@Lang.GetText("StateNameCount", "LocalModsCulture")">

                            @try
                            {
                                @(CultureModService.GetCultureMod(context)?.StateNames.Count ?? 0)
                            }
                            catch
                            {
                                <MudChip Color="Color.Error" Size="Size.Small">@Lang.GetText("Error")</MudChip>
                            }
                        </MudTd>
                        <MudTd>
                            <MudButtonGroup Size="Size.Small" Variant="Variant.Outlined">
                                <MudButton OnClick="@(() => NavigationManager.NavigateTo($"/local-mods/culture/{context}"))">@Lang.GetText("Open")</MudButton>
                                <MudButton Color="Color.Error" OnClick="@(() => DeleteCulture(context))">@Lang.GetText("Delete")</MudButton>
                            </MudButtonGroup>

                        </MudTd>
                    </RowTemplate>
                </MudTable>
            }
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private List<string> _cultures;
    private IEnumerable<string> _pagedData;
    private MudTable<string> _table;

    protected override void OnInitialized()
    {
        LoadCultures(); // 新增此行
        EventAggregator.GetEvent<ModsChangedEvent>().Subscribe(LoadCultures);
        EventAggregator.GetEvent<LanguageChangedEvent>().Subscribe(LanguageChangedFunc);
    }

    private void LanguageChangedFunc(string language)
    {
        StateHasChanged();
    }


    public void Dispose()
    {
        EventAggregator.GetEvent<ModsChangedEvent>().Unsubscribe(LoadCultures);
        EventAggregator.GetEvent<LanguageChangedEvent>().Unsubscribe(LanguageChangedFunc);
    }

    private void LoadCultures()
    {
        StateHasChanged();
        _cultures = CultureModService.GetAvailableCultureMods();
        if (_table != null)
            _table.ReloadServerData();

    }

    private async Task CreateNewMod()
    {
        var parameters = new DialogParameters()
        {
            { "DialogTitle", Lang.GetText("CreateNewCultureMod", "LocalModsCulture") },
            { "ContentText", Lang.GetText("CreateNewCultureMod", "LocalModsCulture") }
        };


        var options = new DialogOptions()
            {
                CloseOnEscapeKey = true,
                MaxWidth = MaxWidth.Small,
                FullWidth = true
            };

        var dialog = DialogService.Show<InputTextDialog>($"{Lang.GetText("Create")} Mod", parameters, options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            var modName = result.Data.ToString();
            if (string.IsNullOrWhiteSpace(modName))
            {
                Snackbar.Add(Lang.GetText("ModNameNull", "LocalModsCulture"), Severity.Error);
                return;
            }
            if(_cultures.Contains(modName))
            {
                Snackbar.Add(Lang.GetText("ModNameExists", "LocalModsCulture"), Severity.Error);
                return;
            }
            try
            {
                var createResult = CultureModService.CreateCultureMod(modName);

                if (createResult != null)
                {
                    Snackbar.Add($"{Lang.GetText("CreateSuccess", "LocalModsCulture")}", Severity.Success);
                    EventAggregator.GetEvent<ModsChangedEvent>().Publish();
                    NavigationManager.NavigateTo($"/local-mods/culture/{modName}");
                }
                else
                {
                    Snackbar.Add($"{Lang.GetText("CreateFailed", "LocalModsCulture")}", Severity.Error);
                }

            }
            catch (Exception ex)
            {
                Snackbar.Add($"{Lang.GetText("CreateFailed", "LocalModsCulture")}: {ex.Message}", Severity.Error);
            }

        }
        
    }

    private async Task DeleteCulture(string modName)
    {
        var parameters = new DialogParameters()
        {
            { "ContentText", $"{Lang.GetText("ConfirmDeleteMessage", "LocalModsCulture")} {modName}? {Lang.GetText("ThisOperationCannotBeRestored", "LocalModsCulture")}" },
            { "Color", Color.Error }
        };

        var dialog = DialogService.Show<DeleteDialog>($"{Lang.GetText("Delete")} Mod", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            try
            {
                var delResult = CultureModService.DeleteCultureMod(modName);
                if (delResult)
                    Snackbar.Add(Lang.GetText("DeleteSuccess", "LocalModsCulture"), Severity.Success);
                else
                    Snackbar.Add(Lang.GetText("DeleteFailed", "LocalModsCulture"), Severity.Error);
                EventAggregator.GetEvent<ModsChangedEvent>().Publish();

            }
            catch (Exception ex)
            {
                Snackbar.Add($"{Lang.GetText("DeleteFailed", "LocalModsCulture")}: {ex.Message}", Severity.Error);
            }

        }
    }
}
