@page "/local-mods/religion"
@using FMSModManager.Core.Services
@inject ReligionService ReligionService

<h3>宗教Mod管理</h3>

<p>这里是本地Mod管理 - 宗教Mod管理页面。</p>

@if (religionData == null)
{
    <p>加载中...</p>
}
else
{
    <div>
        <h4>@(religionData["name"]?.ToString())</h4>
        <p>@(religionData["description"]?.ToString())</p>
        <p><strong>圣书名称:</strong> @(religionData["holyBookName"]?.ToString())</p>
        <p><strong>宗教实践:</strong></p>
        <ul>
            @foreach (var practice in (List<string>)religionData["practices"])
            {
                <li>@practice</li>
            }
        </ul>
    </div>

    <button @onclick="EditReligion">编辑</button>

    @if (isEditing)
    {
        <form @onsubmit="SaveReligion">
            <label>
                名称:
                <input @bind="editedData.name" />
            </label>
            <br />
            <label>
                描述:
                <input @bind="editedData.description" />
            </label>
            <br />
            <label>
                圣书名称:
                <input @bind="editedData.holyBookName" />
            </label>
            <br />
            <label>
                宗教实践:
                <textarea @bind="editedData.practicesString"></textarea>
            </label>
            <br />
            <button type="submit">保存</button>
            <button type="button" @onclick="CancelEdit">取消</button>
        </form>
    }
}

@code {
    private Dictionary<string, object> religionData;
    private bool isEditing = false;
    private EditedReligionData editedData = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            religionData = await Task.Run(() => ReligionService.ReadReligion("Atheism"));
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading religion data: {ex.Message}");
        }
    }

    private void EditReligion()
    {
        if (religionData != null)
        {
            editedData = new EditedReligionData
            {
                name = religionData["name"]?.ToString(),
                description = religionData["description"]?.ToString(),
                holyBookName = religionData["holyBookName"]?.ToString(),
                practicesString = string.Join("\n", (List<string>)religionData["practices"])
            };
            isEditing = true;
        }
    }

    private void SaveReligion()
    {
        if (religionData != null)
        {
            religionData["name"] = editedData.name;
            religionData["description"] = editedData.description;
            religionData["holyBookName"] = editedData.holyBookName;
            religionData["practices"] = editedData.practicesString.Split(new[] { '\n' }, StringSplitOptions.RemoveEmptyEntries).ToList();

            try
            {
                ReligionService.WriteReligion("Atheism", religionData);
                isEditing = false;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error saving religion data: {ex.Message}");
            }
        }
    }

    private void CancelEdit()
    {
        isEditing = false;
    }

    public class EditedReligionData
    {
        public string name { get; set; }
        public string description { get; set; }
        public string holyBookName { get; set; }
        public string practicesString { get; set; }
    }
}
